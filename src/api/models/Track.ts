/* tslint:disable */
/* eslint-disable */
/**
 * Beat Link Trigger Overlay API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.6.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface Track
 */
export interface Track {
  /**
   *
   * @type {string}
   * @memberof Track
   */
  album: string
  /**
   *
   * @type {string}
   * @memberof Track
   */
  artist: string
  /**
   *
   * @type {string}
   * @memberof Track
   */
  comment: string
  /**
   *
   * @type {number}
   * @memberof Track
   */
  duration: number
  /**
   *
   * @type {string}
   * @memberof Track
   */
  genre: string
  /**
   *
   * @type {number}
   * @memberof Track
   */
  id: number
  /**
   *
   * @type {string}
   * @memberof Track
   */
  key: string
  /**
   *
   * @type {number}
   * @memberof Track
   */
  rating: number
  /**
   *
   * @type {string}
   * @memberof Track
   */
  slot: string
  /**
   *
   * @type {number}
   * @memberof Track
   */
  startingTempo: number
  /**
   *
   * @type {string}
   * @memberof Track
   */
  title: string
  /**
   *
   * @type {string}
   * @memberof Track
   */
  type: string
  /**
   *
   * @type {number}
   * @memberof Track
   */
  year: number
}

/**
 * Check if a given object implements the Track interface.
 */
export function instanceOfTrack(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'album' in value
  isInstance = isInstance && 'artist' in value
  isInstance = isInstance && 'comment' in value
  isInstance = isInstance && 'duration' in value
  isInstance = isInstance && 'genre' in value
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'key' in value
  isInstance = isInstance && 'rating' in value
  isInstance = isInstance && 'slot' in value
  isInstance = isInstance && 'startingTempo' in value
  isInstance = isInstance && 'title' in value
  isInstance = isInstance && 'type' in value
  isInstance = isInstance && 'year' in value

  return isInstance
}

export function TrackFromJSON(json: any): Track {
  return TrackFromJSONTyped(json, false)
}

export function TrackFromJSONTyped(json: any, ignoreDiscriminator: boolean): Track {
  if (json === undefined || json === null) {
    return json
  }
  return {
    album: json['album'],
    artist: json['artist'],
    comment: json['comment'],
    duration: json['duration'],
    genre: json['genre'],
    id: json['id'],
    key: json['key'],
    rating: json['rating'],
    slot: json['slot'],
    startingTempo: json['starting-tempo'],
    title: json['title'],
    type: json['type'],
    year: json['year'],
  }
}

export function TrackToJSON(value?: Track | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    album: value.album,
    artist: value.artist,
    comment: value.comment,
    duration: value.duration,
    genre: value.genre,
    id: value.id,
    key: value.key,
    rating: value.rating,
    slot: value.slot,
    'starting-tempo': value.startingTempo,
    title: value.title,
    type: value.type,
    year: value.year,
  }
}
